#!/usr/bin/env ruby

require 'optparse'

CONF_DIR = File.expand_path('~/.ssh/config.d')
SSH_CONFIG = File.expand_path('~/.ssh/config')
MAGIC_LINE = "# Generated by #{File.basename(__FILE__)}"

with_files = []

optparse = OptionParser.new do|opts|
  opts.on('-h', '--help', 'Display this screen') do
    puts opts
    exit
  end
  opts.on('-w', '--with CONFIG', 'Include an otherwise disabled config file') do |file|
    puts "Including #{file} even if disabled..."
    with_files << file
  end
end
optparse.parse!

if !File.directory?(CONF_DIR)
  puts "#{CONF_DIR} does not exist or is not a directory"
  Process.exit!(1)
end

if File.exists?(SSH_CONFIG) && File.new(SSH_CONFIG).gets == "#{MAGIC_LINE}\n"
  puts "Found generated ssh_config under $SSH_CONFIG. Overwriting..."
elsif File.exists?(SSH_CONFIG)
  puts "Found hand-crafted ssh_config under $SSH_CONFIG. Please move it out of the way."
  Process.exit!(2)
end

File.open(SSH_CONFIG, 'w') do |ssh_config|
  ssh_config.puts(MAGIC_LINE)
  ssh_config.puts("# DO NOT EDIT THIS FILE")
  ssh_config.puts("# Create or modify files under #{CONF_DIR}/ instead")
end

Dir["#{CONF_DIR}/**"].reject do |file|
  file =~ /\.disabled$/ && !with_files.include?("#{File.basename(file, '.disabled')}")
end.sort.each do |file|
  %x(/bin/cat #{file} >> #{SSH_CONFIG})
  %x(echo >> #{SSH_CONFIG})
end
